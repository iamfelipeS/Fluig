var arraysCamposIntegravel = ["B1_ALTER","B1_CC","B1_CLVL","B1_COD","B1_TFETHAB","B1_QTDSER","B1_IMPZFRC","B1_GARANT","B1_GRADE","B1_FLAGSUG","B1_USAFEFO","B1_CRICMS","B1_FANTASM","B1_PRODSBP","B1_CRICMST","B1_ANUENTE",
"B1_FORAEST","B1_CFEMS","B1_RICM65","B1_VALEPRE","B1_FRETISS","B1_BALANCA","B1_TPDP","B1_CALCFET","B1_CONTRAT","B1_TPREG","B1_RSATIVO","B1_CODBAR","B1_CODGTIN","B1_CODITE","B1_COMIS","B1_CONINI","B1_CONTA","B1_CONV",
"B1_CUSTD","B1_DATREF","B1_DESC","B1_DESC_GI","B1_DESC_I","B1_DESC_P","B1_DTREFP1","B1_ESPECIF","B1_FORMLOT","B1_FPCOD","B1_GRUPCOM","B1_GRUPO","B1_ITEMCC","B1_LOCPAD","B1_LOJPROC","B1_MAT_PRI","B1_OPC","B1_PERINV",
"B1_PESO","B1_POTENCI","B1_PROC","B1_PRV1","B1_QB","B1_QBP","B1_REVATU","B1_SEGUM","B1_TE","B1_TS","B1_UCALSTD","B1_UCOM","B1_UM","B1_UPRC","B1_UREV","B1_VLREFUS","B1_BITMAP","B1_CODOBS","B1_SITPROD","B1_CONTCQP",
"B1_NOTAMIN","B1_NUMCQPR","B1_EDICAO","B1_FAIXAS","B1_ISBN","B1_LINGUA","B1_NROPAG","B1_OBSISBN","B1_QTDACUM","B1_QTDINIC","B1_SERIE","B1_TITORIG","B1_ADMIN","B1_PERGART","B1_AFABOV","B1_AFACS","B1_AFAMAD",
"B1_AFETHAB","B1_ALFECRN","B1_ALIQISS","B1_CLASFIS","B1_CLASSE","B1_CNAE","B1_CODISS","B1_CRDEST","B1_CRDPRES","B1_ESPECIE","B1_EX_NBM","B1_EX_NCM","B1_FECP","B1_GRTRIB","B1_INT_ICM","B1_IPI","B1_ORIGEM",
"B1_PCOFINS","B1_PCSLL","B1_PICM","B1_PICMENT","B1_PICMRET","B1_POSIPI","B1_PPIS","B1_PRFDSUL","B1_QTMIDIA","B1_REDCOF","B1_REDINSS","B1_REDIRRF","B1_REDPIS","B1_REGRISS","B1_TAB_IPI","B1_TRIBMUN","B1_VLR_COF",
"B1_VLR_ICM","B1_VLR_IPI","B1_VLR_PIS","B1_VLRSELO","B1_ATRIB1","B1_ATRIB2","B1_ATRIB3","B1_CORPRI","B1_CORSEC","B1_EMAX","B1_EMIN","B1_ESTFOR","B1_ESTRORI","B1_ESTSEG","B1_FORPRZ","B1_LE","B1_LM","B1_LOTESBP",
"B1_NICONE","B1_OPERPAD","B1_PE","B1_PRVALID","B1_QE","B1_REGSEQ","B1_TOLER","B1_AFASEMT","B1_AFUNDES","B1_AIMAMT","B1_ALADI","B1_ALFECOP","B1_ALFECST","B1_ALFUMAC","B1_ATIVO","B1_BASE","B1_BASE2","B1_BASE3",
"B1_CCCUSTO","B1_CEST","B1_CFEMA","B1_CHASSI","B1_CNATREC","B1_CODANT","B1_CODEMB","B1_CODLAN","B1_CODNOR","B1_CODPROC","B1_CODQAD","B1_COEFDCR","B1_COLOR","B1_DATASUB","B1_DCR","B1_DCRE","B1_DCRII","B1_DESBSE2",
"B1_DESBSE3","B1_DIFCNAE","B1_DTCORTE","B1_DTFIMNT","B1_FABRIC","B1_FECPBA","B1_FILIAL","B1_FRACPER","B1_GCCUSTO","B1_GDODIF","B1_GRPCST","B1_GRPNATR","B1_GRPTI","B1_GRUDES","B1_HREXPO","B1_IAT","B1_IDHIST",
"B1_IMPNCM","B1_IPPT","B1_LOTVEN","B1_MARKUP","B1_MODELO","B1_MOPC","B1_MSEXP","B1_MTBF","B1_MTTR","B1_NALNCCA","B1_NALSH","B1_NUMCOP","B1_OK","B1_PAFMD5","B1_PARCEI","B1_PAUTFET","B1_PESBRU","B1_PMACNUT","B1_PMICNUT",
"B1_PR43080","B1_PRDORI","B1_PRINCMG","B1_PRODPAI","B1_SELOEN","B1_SETOR","B1_SITTRIB","B1_TALLA","B1_TECLA","B1_TERUM","B1_TIPCAR","B1_TIPOBN","B1_TIPVEC","B1_TNATREC","B1_TPPROD","B1_UMOEC","B1_USERLGA","B1_USERLGI",
"B1_UVLRC","B1_VEREAN","B1_VIGENC","B1_VLCIF","B1_INTEG","B1_PORCPRL","B1_PRODREC","B1_TIPCONV","B1_INSS","B1_DESPIMP","B1_MRP","B1_RPRODEP","B1_REQUIS","B1_RETOPER","B1_CSLL","B1_MSBLQL","B1_APROPRI","B1_TIPODEC",
"B1_CONTSOC","B1_IRRF","B1_TIPOCQ","B1_SOLICIT","B1_CPOTENC","B1_COFINS","B1_FETHAB","B1_CFEM","B1_DCI","B1_IVAAJU","B1_PIS","B1_MIDIA","B1_IMPORT","B1_MONO","B1_TIPE","B1_QUADPRO","B1_FAMILIA","B1_MEPLES",
"B1_CLASSVE","B1_FECOP","B1_RASTRO","B1_REFBAS","B1_AJUDIF","B1_LOCALIZ","B1_REGESIM","B1_AGREGCU","B1_FUSTF","B1_SELO","B1_MCUSTD","B1_ESCRIPI","B1_CARGAE","B1_PRN944I","B1_ENVOBR", "B1_TIPO", "B1TIPO","B1TIPOBN",
"B1GRTRIB","B1CODISS","B1SETOR","B1TPPROD","B1CLASSE","B1CORPRI","B1CORSEC","B1GDODIF","B1ORIGEM","B1SITPROD","B1TIPVEC","B1GRPTI","B1CC","B1CCCUSTO","B1SEGUM","B1UM","B1TE","B1TS","B1ESTFOR","B1FORPRZ","B1FORMLOT",
"B1PARCEI","B1TNATREC","B1CONTA","B1ITEMCC","B1CLVL","B1TIPCAR","B1CODEMB", "B1CODNOR","B1TABIPI","B1GCCUSTO","B1LOCPAD","B1CODQAD","B1GRUPO","B1NALSH","B1NALNCCA","B1ALADI"]; 


function createDataset(fields, constraints, sortFields) {
	try {
	var query = "" ;
		query += " SELECT ";
		query += "SB1.B1_ALTER,SB1.B1_CC, SB1.B1_CLVL, SB1.B1_COD, SB1.B1_TFETHAB, SB1.B1_QTDSER, SB1.B1_CODBAR, SB1.B1_IMPZFRC, SB1.B1_CODGTIN, SB1.B1_CODITE, SB1.B1_COMIS, SB1.B1_CONINI, SB1.B1_CONTA, SB1.B1_CONV, ";
		query += "SB1.B1_CUSTD,SB1.B1_DATREF, SB1.B1_DESC, SB1.B1_DESC_GI, SB1.B1_DESC_I, SB1.B1_DESC_P, SB1.B1_DTREFP1, SB1.B1_ESPECIF, SB1.B1_FORMLOT, SB1.B1_FPCOD, ";
		query += "SB1.B1_GRUPCOM, SB1.B1_GRUPO, SB1.B1_ITEMCC, SB1.B1_LOCPAD, SB1.B1_LOJPROC, SB1.B1_MAT_PRI, SB1.B1_OPC, SB1.B1_PERINV, SB1.B1_PESO, SB1.B1_POTENCI, ";	
		query += "SB1.B1_PROC, SB1.B1_PRV1, SB1.B1_QB, SB1.B1_QBP, SB1.B1_REVATU, SB1.B1_SEGUM, SB1.B1_TE, SB1.B1_TIPO, SB1.B1_TS, SB1.B1_UCALSTD, SB1.B1_UCOM, ";
		query += "SB1.B1_UPRC, SB1.B1_UREV, SB1.B1_VLREFUS, SB1.B1_BITMAP, SB1.B1_CODOBS, SB1.B1_SITPROD, SB1.B1_CONTCQP, SB1.B1_NOTAMIN, SB1.B1_NUMCQPR, ";
		query += "SB1.B1_EDICAO, SB1.B1_FAIXAS, SB1.B1_ISBN, SB1.B1_LINGUA, SB1.B1_NROPAG, SB1.B1_OBSISBN, SB1.B1_QTDACUM, SB1.B1_QTDINIC, SB1.B1_SERIE, SB1.B1_TITORIG, ";
		query += "SB1.B1_ADMIN, SB1.B1_PERGART, SB1.B1_AFABOV, SB1.B1_AFACS, SB1.B1_AFAMAD, SB1.B1_AFETHAB, SB1.B1_ALFECRN, SB1.B1_ALIQISS, SB1.B1_CLASFIS, SB1.B1_CLASSE, ";
		query += "SB1.B1_CNAE, SB1.B1_CODISS, SB1.B1_CRDEST, SB1.B1_CRDPRES, SB1.B1_ESPECIE, SB1.B1_EX_NBM, SB1.B1_EX_NCM, SB1.B1_FECP, SB1.B1_GRTRIB, SB1.B1_INT_ICM, ";
		query += "SB1.B1_IPI, SB1.B1_ORIGEM, SB1.B1_PCOFINS, SB1.B1_PCSLL, SB1.B1_PICM, SB1.B1_PICMENT, SB1.B1_PICMRET, SB1.B1_POSIPI, SB1.B1_PPIS, SB1.B1_PRFDSUL, ";
		query += "SB1.B1_QTMIDIA, SB1.B1_REDCOF, SB1.B1_REDINSS, SB1.B1_REDIRRF, SB1.B1_REDPIS, SB1.B1_REGRISS, SB1.B1_TAB_IPI, SB1.B1_TRIBMUN, SB1.B1_VLR_COF, "; 
		query += "SB1.B1_VLR_ICM,SB1.B1_VLR_IPI, SB1.B1_VLR_PIS, SB1.B1_VLRSELO, SB1.B1_ATRIB1, SB1.B1_ATRIB2, SB1.B1_ATRIB3, SB1.B1_CORPRI, SB1.B1_CORSEC, SB1.B1_EMAX, ";
		query += "SB1.B1_EMIN,SB1.B1_ESTFOR, SB1.B1_ESTRORI, SB1.B1_ESTSEG, SB1.B1_FORPRZ, SB1.B1_LE, SB1.B1_LM, SB1.B1_LOTESBP, SB1.B1_NICONE, SB1.B1_OPERPAD, SB1.B1_PE, ";
		query += "SB1.B1_PRVALID,SB1.B1_QE, SB1.B1_REGSEQ, SB1.B1_TOLER, SB1.B1_AFASEMT, SB1.B1_AFUNDES, SB1.B1_AIMAMT, SB1.B1_ALADI, SB1.B1_ALFECOP, SB1.B1_ALFECST, ";
		query += "SB1.B1_ALFUMAC,SB1.B1_ATIVO, SB1.B1_BASE, SB1.B1_BASE2, SB1.B1_BASE3, SB1.B1_CCCUSTO, SB1.B1_CEST, SB1.B1_CFEMA, ";
		query += "SB1.B1_CHASSI,SB1.B1_CNATREC,SB1.B1_CODANT,SB1.B1_CODEMB,SB1.B1_CODLAN, SB1.B1_CODNOR, SB1.B1_CODPROC, SB1.B1_CODQAD, SB1.B1_COEFDCR, SB1.B1_COLOR, ";
		query += "SB1.B1_DATASUB, SB1.B1_DCR, SB1.B1_DCRE, SB1.B1_DCRII,SB1.B1_DESBSE2, SB1.B1_DESBSE3, SB1.B1_DIFCNAE, SB1.B1_DTCORTE, SB1.B1_DTFIMNT, SB1.B1_FABRIC, ";
		query += "SB1.B1_FECPBA, SB1.B1_FILIAL, SB1.B1_FRACPER, SB1.B1_GCCUSTO, SB1.B1_GDODIF, SB1.B1_GRPCST, SB1.B1_GRPNATR, SB1.B1_GRPTI, SB1.B1_GRUDES, ";
		query += "SB1.B1_HREXPO, SB1.B1_IAT, SB1.B1_IDHIST, SB1.B1_IMPNCM,SB1.B1_IPPT, SB1.B1_LOTVEN, SB1.B1_MARKUP, SB1.B1_MODELO, SB1.B1_MOPC, SB1.B1_MSEXP, SB1.B1_MTBF, ";
		query += "SB1.B1_MTTR, SB1.B1_NALNCCA, SB1.B1_NALSH, SB1.B1_NUMCOP,SB1.B1_OK, SB1.B1_PAFMD5, SB1.B1_PARCEI, SB1.B1_PAUTFET, SB1.B1_PESBRU, SB1.B1_PMACNUT, ";
		query += "SB1.B1_PMICNUT, SB1.B1_PR43080, SB1.B1_PRDORI, SB1.B1_PRINCMG,SB1.B1_PRODPAI, SB1.B1_SELOEN, SB1.B1_SETOR, SB1.B1_SITTRIB, SB1.B1_TALLA, SB1.B1_TECLA, ";
		query += "SB1.B1_TERUM, SB1.B1_TIPCAR, SB1.B1_TIPOBN, SB1.B1_TIPVEC,SB1.B1_TNATREC, SB1.B1_TPPROD, SB1.B1_UMOEC,SB1.B1_UM, SB1.B1_USERLGA, SB1.B1_USERLGI, SB1.B1_UVLRC, "; 	
		query += "SB1.B1_VEREAN, SB1.B1_VIGENC, SB1.B1_VLCIF, SB1.B1_INTEG, SB1.B1_PORCPRL,";
		query += "SB1.B1_PRODREC, SB1.B1_TIPCONV, SB1.B1_INSS, SB1.B1_DESPIMP, SB1.B1_MRP, SB1.B1_RPRODEP, SB1.B1_REQUIS, SB1.B1_RETOPER, SB1.B1_CSLL, SB1.B1_MSBLQL, ";
		query += "SB1.B1_APROPRI, SB1.B1_TIPODEC, SB1.B1_CONTSOC, SB1.B1_IRRF, SB1.B1_TIPOCQ, SB1.B1_SOLICIT, SB1.B1_CPOTENC, SB1.B1_COFINS, SB1.B1_FETHAB, SB1.B1_CFEM, ";
		query += "SB1.B1_DCI, SB1.B1_IVAAJU, SB1.B1_PIS, SB1.B1_MIDIA, SB1.B1_IMPORT, SB1.B1_MONO, SB1.B1_TIPE, SB1.B1_QUADPRO, SB1.B1_FAMILIA, SB1.B1_MEPLES, SB1.B1_CLASSVE, ";
		query += "SB1.B1_FECOP, SB1.B1_RASTRO, SB1.B1_REFBAS, SB1.B1_AJUDIF, SB1.B1_LOCALIZ, SB1.B1_REGESIM, SB1.B1_AGREGCU, SB1.B1_FUSTF, SB1.B1_SELO, SB1.B1_MCUSTD, ";
		query += "SB1.B1_ESCRIPI, SB1.B1_CARGAE, SB1.B1_PRN944I, SB1.B1_ENVOBR, SB1.B1_GRADE, SB1.B1_FLAGSUG, SB1.B1_USAFEFO, SB1.B1_CRICMS, SB1.B1_FANTASM, SB1.B1_PRODSBP, ";
		query += "SB1.B1_CRICMST, SB1.B1_ANUENTE, SB1.B1_FORAEST, SB1.B1_CFEMS, SB1.B1_RICM65, SB1.B1_VALEPRE, SB1.B1_FRETISS, SB1.B1_BALANCA, SB1.B1_TPDP, SB1.B1_CALCFET, ";
		query += "SB1.B1_CONTRAT, SB1.B1_TPREG, SB1.B1_RSATIVO, SB1.B1_GARANT ";	
		/*query += "SX501.X5_DESCRI AS B1TIPO, SX502.X5_DESCRI AS B1TIPOBN, SX521.X5_DESCRI AS B1GRTRIB, SX560.X5_DESCRI AS B1CODISS, SX572.X5_DESCRI AS B1SETOR, SX592.X5_DESCRI AS B1TPPROD, ";
		query += "SX5A9.X5_DESCRI AS B1CLASSE, SX5E1.X5_DESCRI AS B1CORPRI, SX5E2.X5_DESCRI AS B1CORSEC, SX5GG.X5_DESCRI AS B1GDODIF, SX5S0.X5_DESCRI AS B1ORIGEM, SX5T2.X5_DESCRI AS B1SITPROD, ";
		query += "SX5VC.X5_DESCRI AS B1TIPVEC, SX5XJ.X5_DESCRI AS B1GRPTI, ";
		query += "CTT1.CTT_DESC01 AS B1CC, CTT2.CTT_DESC01 AS B1CCCUSTO, SAH1.AH_DESCPO AS B1SEGUM, SAH2.AH_DESCPO AS B1UM, SF41.F4_TEXTO AS B1TE, SF42.F4_TEXTO AS B1TS, SM41.M4_DESCR AS B1ESTFOR, ";
		query += "SM42.M4_DESCR AS B1FORPRZ, SM43.M4_DESCR AS B1FORMLOT, AC4.AC4_NOME AS B1PARCEI, CCZ.CCZ_DESC AS B1TNATREC, CT10.CT1_DESC01 AS B1CONTA, CTD.CTD_DESC01 AS B1ITEMCC, CTH.CTH_DESC01 AS B1CLVL, ";
	    query += "DB0.DB0_DESMOD AS B1TIPCAR, EE5.EE5_DESC AS B1CODEMB, EEI10.EEI_DESC AS B1CODNOR, EEI60.EI6_DESCR AS B1TABIPI, CTR.CTR_DESC AS B1GCCUSTO, NNR.NNR_DESCRI AS B1LOCPAD, QAD.QAD_DESC AS B1CODQAD, ";
		query += "SBM.BM_DESC AS B1GRUPO, SJ1.J1_DESC AS B1NALSH, SJ2.J2_DESC AS B1NALNCCA, SJC.JC_DESC AS B1ALADI ";*/		
		query += " FROM FLUIG.VIEW_dts_sb1_sync_incr_qa_nj ";
		//query += "FROM SB1010 SB1 " 
		query += "LEFT JOIN CTT010 CTT1 ON SB1.B1_CC  = CTT1.CTT_CUSTO ";
		query += "LEFT JOIN CTT010 CTT2 ON SB1.B1_CCCUSTO = CTT2.CTT_CUSTO "; 
		query += "LEFT JOIN SAH010 SAH1 ON SB1.B1_SEGUM = SAH1.AH_UNIMED ";
		query += "LEFT JOIN SAH010 SAH2 ON SB1.B1_UM = SAH2.AH_UNIMED ";
		query += "LEFT JOIN SF4010 SF41 ON SB1.B1_TE = SF41.F4_CODIGO AND SB1.B1_FILIAL = SF41.F4_FILIAL "; 
		query += "LEFT JOIN SF4010 SF42 ON SB1.B1_TS = SF42.F4_CODIGO AND SB1.B1_FILIAL = SF42.F4_FILIAL ";
		query += "LEFT JOIN SM4010 SM41 ON SB1.B1_ESTFOR = SM41.M4_CODIGO ";
		query += "LEFT JOIN SM4010 SM42 ON SB1.B1_FORPRZ = SM42.M4_CODIGO ";
		query += "LEFT JOIN SM4010 SM43 ON SB1.B1_FORMLOT = SM43.M4_CODIGO ";
		query += "LEFT JOIN AC4010 AC4 ON SB1.B1_PARCEI = AC4.AC4_PARTNE ";
		query += "LEFT JOIN CCZ010 CCZ ON SB1.B1_TNATREC = CCZ.CCZ_TABELA AND SB1.B1_CNATREC = CCZ.CCZ_COD ";
		query += "LEFT JOIN CT1010 CT10 ON  SB1.B1_CONTA  = CT10.CT1_CONTA ";
		query += "LEFT JOIN CTD010 CTD ON SB1.B1_ITEMCC = CTD.CTD_ITEM ";
		query += "LEFT JOIN CTH010 CTH ON SB1.B1_CLVL = CTH.CTH_CLVL ";
		query += "LEFT JOIN DB0010 DB0 ON  SB1.B1_TIPCAR  = DB0.DB0_CODMOD ";
		query += "LEFT JOIN EE5010 EE5 ON SB1.B1_CODEMB  = EE5.EE5_CODEMB ";
		query += "LEFT JOIN EEI010 EEI10 ON SB1.B1_CODNOR = EEI10.EEI_COD ";
		query += "LEFT JOIN EI6010 EEI60 ON SB1.B1_TAB_IPI  = EEI60.EI6_CODIGO ";
		query += "LEFT JOIN CTR010 CTR ON SB1.B1_GCCUSTO = CTR.CTR_GRUPO ";
		query += "LEFT JOIN NNR010 NNR ON SB1.B1_LOCPAD = NNR.NNR_CODIGO ";
		query += "LEFT JOIN QAD010 QAD ON SB1.B1_CODQAD = QAD.QAD_CUSTO ";
		query += "LEFT JOIN SBM010 SBM ON SB1.B1_GRUPO = SBM.BM_GRUPO ";
		query += "LEFT JOIN SJ1010 SJ1 ON SB1.B1_NALSH = SJ1.J1_CODIGO ";
		query += "LEFT JOIN SJ2010 SJ2 ON SB1.B1_NALNCCA = SJ2.J2_CODIGO ";
		query += "LEFT JOIN SJC010 SJC ON SB1.B1_ALADI = SJC.JC_CODIGO ";
		query += "LEFT JOIN SA2010 SA2 ON SB1.B1_PROC = SA2.A2_COD AND SB1.B1_LOJPROC = SA2.A2_LOJA ";
		query += "LEFT JOIN SAJ010 SAJ ON SB1.B1_GRUPCOM = SAJ.AJ_GRCOM ";
		query += "LEFT JOIN CDZ010 CDZ ON SB1.B1_CODLAN = CDZ.CDZ_CODLAN "; // NÃO TEM DDOS NA TABELA
		query += "LEFT JOIN F08010 F08 ON SB1.B1_GRPCST = F08.F08_CODIGO "; // NÃO TEM DADOS NA TABELA
		query += "LEFT JOIN SG1010 SG1 ON SB1.B1_ESTRORI = SG1.G1_COD ";  // TABELA NÃO TEM COLUNA DE DESCRIÇÃO
		query += "LEFT JOIN SAE010 SAE ON SB1.B1_ADMIN = SAE.AE_COD ";     // NÃO TEM DDOS NA TABELA
		query += "LEFT JOIN SBP010 SBP ON SB1.B1_BASE = SBP.BP_BASE ";       // NÃO TEM DDOS NA TABELA
		query += "LEFT JOIN SYC010 SYC ON SB1.B1_FPCOD  = SYC.YC_COD ";      // NÃO TEM DDOS NA TABELA
		query += "LEFT JOIN VE5010 VE5 ON SB1.B1_GRUDES = VE5.VE5_GRUDST ";     // NÃO TEM DDOS NA TABELA
		/*query += "LEFT JOIN SX5010 SX501 ON SB1.B1_TIPO    = SX501.X5_CHAVE AND SX501.X5_TABELA = '02' ";
		query += "LEFT JOIN SX5010 SX502 ON SB1.B1_TIPOBN  =  SX502.X5_CHAVE AND SX502.X5_TABELA = '02' ";
		query += "LEFT JOIN SX5010 SX521 ON SB1.B1_GRTRIB  = SX521.X5_CHAVE AND SX521.X5_TABELA = '21' ";
		query += "LEFT JOIN SX5010 SX560 ON SB1.B1_CODISS  = SX560.X5_CHAVE AND SX560.X5_TABELA = '60' ";
		query += "LEFT JOIN SX5010 SX572 ON SB1.B1_SETOR   = SX572.X5_CHAVE AND SX572.X5_TABELA = '72' ";
		query += "LEFT JOIN SX5010 SX592 ON SB1.B1_TPPROD  = SX592.X5_CHAVE AND SX592.X5_TABELA = '92' ";
		query += "LEFT JOIN SX5010 SX5A9 ON SB1.B1_CLASSE  = SX5A9.X5_CHAVE AND SX5A9.X5_TABELA = 'A9' ";
		query += "LEFT JOIN SX5010 SX5E1 ON SB1.B1_CORPRI = SX5E1.X5_CHAVE AND SX5E1.X5_TABELA = 'EE' ";
		query += "LEFT JOIN SX5010 SX5E2 ON SB1.B1_CORSEC =  SX5E2.X5_CHAVE AND SX5E2.X5_TABELA = 'EE' ";
		query += "LEFT JOIN SX5010 SX5GG ON SB1.B1_GDODIF = SX5GG.X5_CHAVE AND SX5GG.X5_TABELA = 'GG' ";
		query += "LEFT JOIN SX5010 SX5S0 ON SB1.B1_ORIGEM = SX5S0.X5_CHAVE AND SX5S0.X5_TABELA = 'S0' ";
		query += "LEFT JOIN SX5010 SX5T2 ON SB1.B1_SITPROD = SX5T2.X5_CHAVE AND SX5T2.X5_TABELA = 'T2' ";
		query += "LEFT JOIN SX5010 SX5VC ON SB1.B1_TIPVEC  = SX5VC.X5_CHAVE AND SX5VC.X5_TABELA = 'VC' ";
		query += "LEFT JOIN SX5010 SX5XJ ON SB1.B1_GRPTI  = SX5XJ.X5_CHAVE AND SX5XJ.X5_TABELA = 'XJ' ";*/
		query += "LEFT JOIN SYD010 SYD ON SB1.B1_POSIPI  = SYD.YD_TEC AND SYD.YD_DESC_P = 'YD'  ";		
		
		log.info('DTS-syncQA')
		log.dir(query)
		var sqlConsulta = DatasetFactory.getDataset("ds_EZ4_SQL_CONSULTA_PROTHEUS", new Array(query), null, null);
		return sqlConsulta
	} catch (e) {
		var dataset = DatasetBuilder.newDataset();
		dataset.addColumn("INFO");
		dataset.addRow(["FALHA AO EXECUTAR A QUERY: (" + e.lineNumber + ") " + e.toString()]);
		return dataset;
	}
}

function onMobileSync(user) {

}

function findConstraint(fieldName, constraints, defaultValue) {
	if (constraints != null) {
		for (var i=0; i<constraints.length; i++){
			if (constraints[i].fieldName == fieldName){
				return constraints[i].initialValue;
			}
		}
	}
	return defaultValue;
}
